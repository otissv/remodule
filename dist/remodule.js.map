{"version":3,"sources":["../src/remodule.js"],"names":["remodule","register","reduxMethods","method","fn","Object","keys","reduce","previousObj","currentKey","Class","initialState","currentModule","actions","previous","current","reducers","state","action","extendReducer","extendReducers","key","form","moduleName","reducer","type","store","middleware","mapStateToProps"],"mappings":";;;;;;;;kBAGwBA,Q;;AAHxB;;;;AACA;;;;;;;;AAEe,SAASA,QAAT,CAAmBC,QAAnB,EAA6B;AAC1C,WAASC,YAAT,CAAuBD,QAAvB,EAAiCE,MAAjC,EAAyC;AACvC,WAAO,UAAUC,EAAV,EAAc;AACnB,aAAOC,OAAOC,IAAP,CAAYL,QAAZ,EAAsBM,MAAtB,CAA6B,UAACC,WAAD,EAAcC,UAAd,EAA6B;AAC/D,YAAIC,QACFD,eAAe,cAAf,IAAiCA,eAAe,UAAhD,GACI,IAAIR,SAASQ,UAAT,CAAJ,EADJ,GAEI,EAHN;;AAKA,YAAIC,MAAMP,MAAN,KAAiB,IAArB,EAA2B,OAAOK,WAAP;;AAE3B,eAAOJ,GAAG,EAAEI,wBAAF,EAAeC,sBAAf,EAA2BN,cAA3B,EAAmCO,YAAnC,EAAH,CAAP;AACD,OATM,EASJ,EATI,CAAP;AAUD,KAXD;AAYD;;AAED,MAAMC,eAAeV,SAASM,MAAT,CAAgB,UAACC,WAAD,EAAcI,aAAd,EAAgC;AACnE,wBACKJ,WADL,sBAEGI,cAAcX,QAFjB,EAE4BW,cAAcD,YAF1C;AAID,GALoB,EAKlB,EALkB,CAArB;;AAOA,MAAME,UAAUZ,SAASM,MAAT,CAAgB,UAACO,QAAD,EAAWC,OAAX,EAAuB;AACrD,wBACKD,QADL,EAEKZ,aACDa,OADC,EAED,QAFC,EAGD,gBAAgD;AAAA,UAA7CP,WAA6C,QAA7CA,WAA6C;AAAA,UAAhCC,UAAgC,QAAhCA,UAAgC;AAAA,UAApBN,MAAoB,QAApBA,MAAoB;AAAA,UAAZO,KAAY,QAAZA,KAAY;;AAChD,0BACKF,WADL,sBAEG,2BAAMC,UAAN,CAFH,EAEuBC,MAAMP,MAAN,CAFvB;AAID,KARE,CAFL;AAYD,GAbe,EAab,EAba,CAAhB;;AAeA,MAAMa,WAAW,SAAXA,QAAW;AAAA,WAAkB,YAAkC;AAAA,UAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,UAAXO,MAAW;;AACnE,UAAMC,gBAAgBC,iBAClBf,OAAOC,IAAP,CAAYc,cAAZ,EAA4Bb,MAA5B,CACA,UAACO,QAAD,EAAWO,GAAX;AAAA,4BACKP,QADL,EAEKM,eAAeC,GAAf,EAAqBJ,MAAMK,IAAN,IAAcL,MAAMI,GAAN,CAAf,IAA8B,EAAlD,EAAsDH,MAAtD,CAFL;AAAA,OADA,EAKA,EALA,CADkB,GAQlB,EARJ;;AAUA,aAAOjB,SAASM,MAAT,CAAgB,UAACO,QAAD,EAAWF,aAAX,EAA6B;AAClD,YAAMW,aAAaX,cAAcX,QAAjC;;AAEA,YAAMuB,UAAU,SAAVA,OAAU,CAACP,KAAD,EAAQC,MAAR,EAAmB;AACjC,cAAML,UAAUX,aACdU,aADc,EAEd,SAFc,EAGd,iBAAgD;AAAA,gBAA7CJ,WAA6C,SAA7CA,WAA6C;AAAA,gBAAhCC,UAAgC,SAAhCA,UAAgC;AAAA,gBAApBN,MAAoB,SAApBA,MAAoB;AAAA,gBAAZO,KAAY,SAAZA,KAAY;;AAChD,gCACKF,WADL,sBAEGC,UAFH,EAEgB,UAACQ,KAAD,EAAQC,MAAR;AAAA,qBACZA,OAAOO,IAAP,KAAgBhB,UAAhB,IAA8BC,MAAMP,MAAN,EAAcc,KAAd,EAAqBC,MAArB,CADlB;AAAA,aAFhB;AAKD,WATe,CAAhB;;AAWA,iBAAOL,QAAQK,OAAOO,IAAf,KAAwB,IAAxB,GACHR,KADG,GAEHJ,QAAQK,OAAOO,IAAf,EAAqBR,KAArB,EAA4BC,MAA5B,CAFJ;AAGD,SAfD;AAgBA,4BACKJ,QADL,sBAEGS,UAFH,EAEgBC,QAAQP,MAAMM,UAAN,CAAR,EAA2BL,MAA3B,CAFhB;AAID,OAvBM,EAuBJC,aAvBI,CAAP;AAwBD,KAnCgB;AAAA,GAAjB;;AAqCA,MAAMO,QAAQ,SAARA,KAAQ;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,qCAAeP,cAAf;AAAA,QAAeA,cAAf,wCAAgC,EAAhC;AAAA,WACZ,mDAAWO,UAAX,uBAAoCX,SAASI,cAAT,CAApC,CADY;AAAA,GAAd;;AAGA,MAAMQ,kBAAkB,SAAlBA,eAAkB,QAAS;AAC/B,WAAO3B,SAASM,MAAT,CAAgB,UAACC,WAAD,EAAcI,aAAd,EAAgC;AACrD,UAAMW,aAAaX,cAAcX,QAAjC;;AAEA,0BACKO,WADL;AAEEG;AAFF,SAGKN,OAAOC,IAAP,CACDM,cAAcD,YADb,EAEDJ,MAFC,CAEM,UAACO,QAAD,EAAWL,UAAX,EAA0B;AACjC,4BACKK,QADL,sBAEGL,UAFH,EAEgBQ,MAAMM,UAAN,EAAkBd,UAAlB,CAFhB;AAID,OAPE,EAOA,EAPA,CAHL;AAYD,KAfM,EAeJ,EAfI,CAAP;AAgBD,GAjBD;;AAmBA,SAAO;AACLI,oBADK;AAELF,8BAFK;AAGLiB,oCAHK;AAILZ,sBAJK;AAKLU;AALK,GAAP;AAOD","file":"remodule.js","sourcesContent":["import camel from 'to-camel-case';\nimport { compose, createStore } from 'redux';\n\nexport default function remodule (register) {\n  function reduxMethods (register, method) {\n    return function (fn) {\n      return Object.keys(register).reduce((previousObj, currentKey) => {\n        let Class =\n          currentKey !== 'initialState' && currentKey !== 'register'\n            ? new register[currentKey]()\n            : {};\n\n        if (Class[method] == null) return previousObj;\n\n        return fn({ previousObj, currentKey, method, Class });\n      }, {});\n    };\n  }\n\n  const initialState = register.reduce((previousObj, currentModule) => {\n    return {\n      ...previousObj,\n      [currentModule.register]: currentModule.initialState\n    };\n  }, {});\n\n  const actions = register.reduce((previous, current) => {\n    return {\n      ...previous,\n      ...reduxMethods(\n        current,\n        'action'\n      )(({ previousObj, currentKey, method, Class }) => {\n        return {\n          ...previousObj,\n          [camel(currentKey)]: Class[method]\n        };\n      })\n    };\n  }, {});\n\n  const reducers = extendReducers => (state = initialState, action) => {\n    const extendReducer = extendReducers\n      ? Object.keys(extendReducers).reduce(\n        (previous, key) => ({\n          ...previous,\n          ...extendReducers[key]((state.form && state[key]) || {}, action)\n        }),\n        {}\n      )\n      : {};\n\n    return register.reduce((previous, currentModule) => {\n      const moduleName = currentModule.register;\n\n      const reducer = (state, action) => {\n        const actions = reduxMethods(\n          currentModule,\n          'reducer'\n        )(({ previousObj, currentKey, method, Class }) => {\n          return {\n            ...previousObj,\n            [currentKey]: (state, action) =>\n              action.type === currentKey && Class[method](state, action)\n          };\n        });\n\n        return actions[action.type] == null\n          ? state\n          : actions[action.type](state, action);\n      };\n      return {\n        ...previous,\n        [moduleName]: reducer(state[moduleName], action)\n      };\n    }, extendReducer);\n  };\n\n  const store = ({ middleware, extendReducers = {} }) =>\n    compose(...middleware)(createStore)(reducers(extendReducers));\n\n  const mapStateToProps = state => {\n    return register.reduce((previousObj, currentModule) => {\n      const moduleName = currentModule.register;\n\n      return {\n        ...previousObj,\n        initialState,\n        ...Object.keys(\n          currentModule.initialState\n        ).reduce((previous, currentKey) => {\n          return {\n            ...previous,\n            [currentKey]: state[moduleName][currentKey]\n          };\n        }, {})\n      };\n    }, {});\n  };\n\n  return {\n    actions,\n    initialState,\n    mapStateToProps,\n    reducers,\n    store\n  };\n}\n"]}